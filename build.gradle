apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'findbugs'

project.version = '1.0.0-SNAPSHOT'
project.group = 'de.prob'

repositories {
	mavenCentral()
	maven {
	    	url "http://cobra.cs.uni-duesseldorf.de/artifactory/repo"
	}
}

configurations { // configuration that holds jars to copy into lib
	releaseJars 
}
 
configurations.all {
 resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
 
def parser_version = '2.5.0-SNAPSHOT'

dependencies {
	//compile (group: 'com.microsoft', name: 'tla2tools', version: '1.4.6')
	compile (group: 'de.tla', name: 'tlatools', version: '1.0.0-SNAPSHOT', changing: true)
	
	compile (group: 'de.prob', name: 'prologlib', version: parser_version)
	compile (group: 'de.prob', name: 'parserbase', version: parser_version)
	compile (group: 'de.prob', name: 'bparser', version: parser_version)
	compile (group: 'de.prob', name: 'ltlparser', version: parser_version)
	
	//compile(group: 'de.prob', name: 'de.prob.core.kernel', version: '2.0.0-milestone-13-SNAPSHOT')

	testCompile (group: 'junit', name: 'junit', version: '4.11')
    testCompile (group: 'de.prob', name: 'tla2bAST', version: '1.0.5-SNAPSHOT')

	releaseJars (group: 'de.tla', name: 'tlatools', version: '1.0.0-SNAPSHOT')
	releaseJars (group: 'de.prob', name: 'prologlib', version: parser_version)
	releaseJars (group: 'de.prob', name: 'parserbase', version: parser_version)
	releaseJars (group: 'de.prob', name: 'bparser', version: parser_version)
	releaseJars (group: 'de.prob', name: 'ltlparser', version: parser_version)
}

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/JacocoReports")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}


test { 
	exclude('de/tlc4b/tlc/integration/probprivate')
	exclude('testing')
	//exclude('de/tlc4b/tlc/integration')
}


task integrationTests(type: Test){
	doFirst{ println("Running integration tests") }
	scanForTestClasses = true
	//include('de/tlc4b/tlc/integration/probprivate/**')
	include('de/tlc4b/**')	
}

// type 'gradle integrationTests jacocoIntegrationTestReport' in order to run the jacoco code coverage analysis
task jacocoIntegrationTestReport(type: JacocoReport) {
	sourceSets sourceSets.main
	//executionData files('build/jacoco/integrationTests.exec')
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
 }

jar { from sourceSets.main.allJava }
jar	{
	from configurations.releaseJars.collect { it.isDirectory() ? it : zipTree(it) }
}
jar {
    manifest {
        attributes "Main-Class" : 'de.tlc4b.TLC4B'
    }
}


task tlc4b(dependsOn: build) << {
	copy {
		from('build/libs/')
		into('build/tlc4b')
		include('tlc4b-'+project.version+'.jar')
		rename('tlc4b-(.+)', 'TLC4B.jar')
	}
}

tasks.withType(FindBugs) {
	// disable findbugs by default
	// in order to run findbugs type 'gradle tlc4b findbugsMain findbugsTest'
	task -> enabled = gradle.startParameter.taskNames.contains(task.name)
	
    reports {
        xml.enabled = false
        html.enabled = true
    }
	
	ignoreFailures = true
}

